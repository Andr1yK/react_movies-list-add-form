{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setDescription","setImdbUrl","setImgUrl","setImdbId","setTitle","errors","setErrors","formFieldSetters","changeFieldError","name","rawValue","value","trim","condition","test","length","state","handleOnBlur","event","target","handleChange","Object","prototype","hasOwnProperty","call","onSubmit","preventDefault","checkedFields","entries","reduce","acc","fieldsHasError","keys","forEach","htmlFor","onBlur","onChange","id","type","classNames","placeholder","App","moviesFromServer","addMovie","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yyEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,8BCGtBC,G,MAAsB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC7B,EAAsCC,mBAAS,IAA/C,mBAAOd,EAAP,KAAoBe,EAApB,KACA,EAA8BD,mBAAS,IAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOb,EAAP,KAAegB,EAAf,KACA,EAA4BH,mBAAS,IAArC,mBAAOH,EAAP,KAAeO,EAAf,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOf,EAAP,KAAcoB,EAAd,KAEA,EAA4BL,oBAAS,iBAAe,CAClDf,MAAO,GACPY,OAAQ,GACRT,QAAS,GACTD,OAAQ,OAJV,mBAAOmB,EAAP,KAAeC,EAAf,KAOMC,EAAoF,CACxFvB,MAAOoB,EACPnB,YAAae,EACbJ,OAAQO,EACRhB,QAASc,EACTf,OAAQgB,GAGJM,EAAmB,SAACC,EAAcC,GACtC,IAAMC,EAAQD,EAASE,OAEjBC,GAAsB,YAATJ,GAA+B,WAATA,KACnC,qKACDK,KAAKH,EAAMC,SACK,IAAjBD,EAAMI,OAEV,OAAQN,GACN,IAAK,QACL,IAAK,SACHH,GAAU,SAACU,GAAD,mBAAC,eACNA,GADK,kBAEPP,EAAOI,EAAY,yBAA2B,QAEjD,MAEF,IAAK,UACL,IAAK,SACHP,GAAU,SAACU,GAAD,mBAAC,eACNA,GADK,kBAEPP,EAAOI,EAAY,gBAAkB,QAQ5C,OAAOA,GAOHI,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAEdH,EAAiBC,EAAME,IA+BnBS,EAAe,SAACF,GACpB,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAEVU,OAAOC,UAAUC,eAAeC,KAAKjB,EAAkBE,IACzDF,EAAiBE,GAAME,IAI3B,OACE,uBAAMvB,UAAU,OAAOqC,SAzBJ,SAACP,GACpBA,EAAMQ,iBAbe,WACrB,IAAMC,EAA2C,CAC/C3C,QACAY,SACAT,UACAD,UAGF,OAAOmC,OAAOO,QAAQD,GACnBE,QAAO,SAACC,EAAD,0BAAOrB,EAAP,KAAaE,EAAb,YAAwBH,EAAiBC,EAAME,IAAUmB,KAAK,GAMnEC,KACHjC,EAAM,CACJd,MAAOA,EAAM4B,OACb3B,YAAaA,EAAY2B,OACzBhB,OAAQA,EAAOgB,OACfzB,QAASA,EAAQyB,OACjB1B,OAAQA,EAAO0B,SA9BnBS,OAAOW,KAAKzB,GAAkB0B,SAAQ,SAACxB,GAAD,OAAUF,EAAiBE,GAAM,SA8CvE,UACE,gCACE,wBAAOyB,QAAQ,QAAQ9C,UAAU,cAAjC,kBAEGiB,EAAOrB,OAAS,sBAAMI,UAAU,YAAhB,qBAAkCiB,EAAOrB,MAAzC,OACjB,uBACEmD,OAAQlB,EACRN,MAAO3B,EACPyB,KAAK,QACL2B,SAAUhB,EACViB,GAAG,QACHC,KAAK,OACLlD,UAAWmD,IAAW,QAAS,iBAAkB,CAC/C,iBAAkBlC,EAAOrB,QAE3BwD,YAAY,aAIhB,wBAAON,QAAQ,cAAc9C,UAAU,cAAvC,wBAEE,0BACE+C,OAAQlB,EACRN,MAAO1B,EACPmD,SAAUhB,EACVX,KAAK,cACL4B,GAAG,cACHjD,UAAU,uCACVoD,YAAY,mBAIhB,wBAAON,QAAQ,SAAS9C,UAAU,cAAlC,mBAEGiB,EAAOnB,QAAU,sBAAME,UAAU,YAAhB,qBAAkCiB,EAAOnB,OAAzC,OAClB,uBACEiD,OAAQlB,EACRN,MAAOzB,EACPuB,KAAK,SACL2B,SAAUhB,EACViB,GAAG,SACHC,KAAK,OACLlD,UAAWmD,IAAW,QAAS,iBAAkB,CAC/C,iBAAkBlC,EAAOnB,SAE3BsD,YAAY,cAIhB,wBAAON,QAAQ,UAAU9C,UAAU,cAAnC,oBAEGiB,EAAOlB,SAAW,sBAAMC,UAAU,YAAhB,qBAAkCiB,EAAOlB,QAAzC,OACnB,uBACEgD,OAAQlB,EACRN,MAAOxB,EACPiD,SAAUhB,EACVX,KAAK,UACL4B,GAAG,UACHC,KAAK,OACLlD,UAAWmD,IAAW,QAAS,iBAAkB,CAC/C,iBAAkBlC,EAAOlB,UAE3BqD,YAAY,eAIhB,wBAAON,QAAQ,SAAS9C,UAAU,cAAlC,mBAEGiB,EAAOT,QAAU,sBAAMR,UAAU,YAAhB,qBAAkCiB,EAAOT,OAAzC,OAClB,uBACEuC,OAAQlB,EACRmB,SAAUhB,EACVT,MAAOf,EACPa,KAAK,SACL4B,GAAG,SACHC,KAAK,OACLlD,UAAWmD,IAAW,QAAS,iBAAkB,CAC/C,iBAAkBlC,EAAOT,SAE3B4C,YAAY,iBAKlB,wBACEF,KAAK,SACLlD,UAAU,4BAFZ,sB,QC9LOqD,EAAb,4MACEzB,MAAe,CACbvB,OAAQiD,GAFZ,EAKEC,SAAW,SAAChD,GACV,EAAKiD,UAAS,SAAC5B,GAAD,MAAY,CACxBvB,OAAO,GAAD,mBAAMuB,EAAMvB,QAAZ,CAAoBE,SAPhC,4CAWE,WACE,IAAQF,EAAWoD,KAAK7B,MAAhBvB,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUU,MAAO+C,KAAKF,oBApBhC,GAAyBG,IAAMC,WCN/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.004b7692.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { FC, useState } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ninterface Errors {\n  title: string,\n  imdbId: string,\n  imdbUrl: string,\n  imgUrl: string,\n}\n\nconst NewMovie: FC<Props> = ({ onAdd }) => {\n  const [description, setDescription] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [title, setTitle] = useState('');\n\n  const [errors, setErrors] = useState((): Errors => ({\n    title: '',\n    imdbId: '',\n    imdbUrl: '',\n    imgUrl: '',\n  }));\n\n  const formFieldSetters: { [key: string]: React.Dispatch<React.SetStateAction<string>> } = {\n    title: setTitle,\n    description: setDescription,\n    imdbId: setImdbId,\n    imdbUrl: setImdbUrl,\n    imgUrl: setImgUrl,\n  };\n\n  const changeFieldError = (name: string, rawValue: string): boolean => {\n    const value = rawValue.trim();\n\n    const condition = (name === 'imdbUrl' || name === 'imgUrl')\n      ? !(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\n        .test(value.trim())) || value.length === 0\n      : value.length === 0;\n\n    switch (name) {\n      case 'title':\n      case 'imdbId':\n        setErrors((state) => ({\n          ...state,\n          [name]: condition ? 'This field is required' : '',\n        }));\n        break;\n\n      case 'imdbUrl':\n      case 'imgUrl':\n        setErrors((state) => ({\n          ...state,\n          [name]: condition ? 'Incorrect URL' : '',\n        }));\n        break;\n\n      default:\n        break;\n    }\n\n    return condition;\n  };\n\n  const resetForm = () => {\n    Object.keys(formFieldSetters).forEach((name) => formFieldSetters[name](''));\n  };\n\n  const handleOnBlur = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    changeFieldError(name, value);\n  };\n\n  const fieldsHasError = () => {\n    const checkedFields: { [key: string]: string } = {\n      title,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n    };\n\n    return Object.entries(checkedFields)\n      .reduce((acc, [name, value]) => changeFieldError(name, value) || acc, false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!fieldsHasError()) {\n      onAdd({\n        title: title.trim(),\n        description: description.trim(),\n        imdbId: imdbId.trim(),\n        imdbUrl: imdbUrl.trim(),\n        imgUrl: imgUrl.trim(),\n      });\n\n      resetForm();\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    if (Object.prototype.hasOwnProperty.call(formFieldSetters, name)) {\n      formFieldSetters[name](value);\n    }\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"title\" className=\"form__label\">\n          Title\n          {errors.title && <span className=\"errorText\">{`  ${errors.title}!`}</span>}\n          <input\n            onBlur={handleOnBlur}\n            value={title}\n            name=\"title\"\n            onChange={handleChange}\n            id=\"title\"\n            type=\"text\"\n            className={classNames('input', 'input--outline', {\n              'input--error': !!errors.title,\n            })}\n            placeholder=\"title\"\n          />\n        </label>\n\n        <label htmlFor=\"description\" className=\"form__label\">\n          Description\n          <textarea\n            onBlur={handleOnBlur}\n            value={description}\n            onChange={handleChange}\n            name=\"description\"\n            id=\"description\"\n            className=\"input input--outline input--textarea\"\n            placeholder=\"description\"\n          />\n        </label>\n\n        <label htmlFor=\"imgUrl\" className=\"form__label\">\n          ImgUrl\n          {errors.imgUrl && <span className=\"errorText\">{`  ${errors.imgUrl}!`}</span>}\n          <input\n            onBlur={handleOnBlur}\n            value={imgUrl}\n            name=\"imgUrl\"\n            onChange={handleChange}\n            id=\"imgUrl\"\n            type=\"text\"\n            className={classNames('input', 'input--outline', {\n              'input--error': !!errors.imgUrl,\n            })}\n            placeholder=\"imgUrl\"\n          />\n        </label>\n\n        <label htmlFor=\"imdbUrl\" className=\"form__label\">\n          ImdbUrl\n          {errors.imdbUrl && <span className=\"errorText\">{`  ${errors.imdbUrl}!`}</span>}\n          <input\n            onBlur={handleOnBlur}\n            value={imdbUrl}\n            onChange={handleChange}\n            name=\"imdbUrl\"\n            id=\"imdbUrl\"\n            type=\"text\"\n            className={classNames('input', 'input--outline', {\n              'input--error': !!errors.imdbUrl,\n            })}\n            placeholder=\"imdbUrl\"\n          />\n        </label>\n\n        <label htmlFor=\"imdbId\" className=\"form__label\">\n          ImdbId\n          {errors.imdbId && <span className=\"errorText\">{`  ${errors.imdbId}!`}</span>}\n          <input\n            onBlur={handleOnBlur}\n            onChange={handleChange}\n            value={imdbId}\n            name=\"imdbId\"\n            id=\"imdbId\"\n            type=\"text\"\n            className={classNames('input', 'input--outline', {\n              'input--error': !!errors.imdbId,\n            })}\n            placeholder=\"imdbId\"\n          />\n        </label>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"button button--size--full\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport { NewMovie };\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}